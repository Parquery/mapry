# File automatically generated by mapry. DO NOT EDIT OR APPEND!


"""defines an address book."""


import collections
import datetime
import pathlib
import typing


class Person:
    """defines a contactable person."""

    def __init__(
            self,
            id: str,
            full_name: str,
            address: 'Address',
            birthday: datetime.date,
            last_modified: datetime.datetime,
            contact_period: datetime.timedelta,
            friends: typing.MutableMapping[str, 'Person'],
            active: bool,
            height: int,
            fee: float,
            picture: typing.Optional[pathlib.Path] = None) -> None:
        """
        initializes an instance of Person with the given values.

        :param id: identifier of the instance:param full_name: gives the full name (including middle names).
        :param address: notes where the person lives.
        :param birthday: gives the birthday of the person in UTC.
        :param last_modified: indicates the last modification timestamp.
        :param contact_period: gives a minimum period between two calls.
        :param friends: lists friends of the person by nicknames.
        :param active: fires if the user is actively participating.
        :param height: gives height in centimeters.
        :param fee: specifies the memebership fee in dollars.
        :param picture: points to the image on the disk.

        """
        self.id = id
        self.full_name = full_name
        self.address = address
        self.birthday = birthday
        self.last_modified = last_modified
        self.contact_period = contact_period
        self.friends = friends
        self.active = active
        self.height = height
        self.fee = fee
        self.picture = picture if picture is not None else None


class Address:
    """defines an address."""

    def __init__(
            self,
            text: str,
            time_zone: datetime.tzinfo) -> None:
        """
        initializes an instance of Address with the given values.

        :param text: gives the full address.
        :param time_zone: specifies the time zone of the address.

        """
        self.text = text
        self.time_zone = time_zone


class Pipeline:
    """defines an address book."""

    def __init__(
            self,
            maintainer: Person,
            persons: typing.Optional[typing.MutableMapping[str, Person]] = None) -> None:
        """
        initializes an instance of Pipeline with the given values.

        The class registries are initialized with empty ordered dictionaries.
        :param maintainer: indicates the maintainer of the address book.
        :param persons:
            registry of instances of Person;
            if not specified, it is initialized as a ``collections.OrderedDict``.

        """
        self.maintainer = maintainer

        if persons is not None:
            self.persons = persons
        else:
            self.persons = collections.OrderedDict()


# File automatically generated by mapry. DO NOT EDIT OR APPEND!
