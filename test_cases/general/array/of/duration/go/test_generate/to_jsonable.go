package somegraph

// File automatically generated by mapry. DO NOT EDIT OR APPEND!

import (
	"fmt"
	"strings"
	"time"
)

// durationToString represents the duration as a string in ISO 8601 format.
//
// Since time.Duration stores intervals as nanoseconds and excludes longer
// intervals such as minutes, days or months, durationToString
// infers the integral number of these longer intervals and
// produces a compact representation.
func durationToString(d time.Duration) string {
	parts := make([]string, 0, 7)

	////
	// Interprete
	////

	sign := 1
	if d < 0 {
		d = -d
		sign = -1
	}

	days := d / (24 * time.Hour)
	rest := d % (24 * time.Hour)

	hours := rest / time.Hour
	rest = rest % time.Hour

	minutes := rest / time.Minute
	rest = rest % time.Minute

	seconds := rest / time.Second
	rest = rest % time.Second

	nanoseconds := rest

	////
	// Represent
	////

	if sign < 0 {
		parts = append(parts, "-")
	}

	parts = append(parts, "P")

	if days > 0 {
		parts = append(
			parts,
			fmt.Sprintf("%dD", days))
	}

	if hours > 0 || minutes > 0 || seconds > 0 || nanoseconds > 0 {
		parts = append(parts, "T")

		if hours > 0 {
			parts = append(
				parts,
				fmt.Sprintf("%dH", hours))
		}

		if minutes > 0 {
			parts = append(
				parts,
				fmt.Sprintf("%dM", minutes))
		}

		if nanoseconds == 0 {
			if seconds > 0 {
				parts = append(
					parts,
					fmt.Sprintf("%dS", seconds))
			}
		} else {
			parts = append(
				parts,
				strings.TrimRight(
					fmt.Sprintf("%d.%09d", seconds, nanoseconds),
					"0"))
			parts = append(parts, "S")
		}
	}

	return strings.Join(parts, "")
}

// SomeGraph converts the instance to a JSONable representation.
//
// SomeGraph requires:
//  * instance != nil
//
// SomeGraph ensures:
//  * (err == nil && target != nil) || (err != nil && target == nil)
func SomeGraphToJSONable(
	instance *SomeGraph) (
	target map[string]interface{}, err error) {

	if instance == nil {
		panic("unexpected nil instance")
	}

	target = make(map[string]interface{})
	defer func() {
		if err != nil {
			target = nil
		}
	}()
	////
	// Serialize ArrayOfDurations
	////

	count0 := len(instance.ArrayOfDurations)
	slice0 := instance.ArrayOfDurations
	target0 := make([]interface{}, count0)
	for i0 := 0; i0 < count0; i0++ {
		target0[i0] = durationToString(
			slice0[i0])
	}
	target["array_of_durations"] = target0

	return
}

// File automatically generated by mapry. DO NOT EDIT OR APPEND!
