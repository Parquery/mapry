# File automatically generated by mapry. DO NOT EDIT OR APPEND!


"""defines some object graph."""


import collections
import typing


class Empty:
    """defines an empty class."""

    def __init__(
            self,
            id: str) -> None:
        """
        initializes an instance of Empty with the given values.

        :param id: identifier of the instance
        """
        self.id = id


class EmbedWithRef:
    """defines an embeddable structure with a class reference."""

    def __init__(
            self,
            reference_to_empty: Empty) -> None:
        """
        initializes an instance of EmbedWithRef with the given values.

        :param reference_to_empty: defines a property.

        """
        self.reference_to_empty = reference_to_empty


class SomeGraph:
    """defines some object graph."""

    def __init__(
            self,
            some_embed: EmbedWithRef,
            empties: typing.Optional[typing.MutableMapping[str, Empty]] = None) -> None:
        """
        initializes an instance of SomeGraph with the given values.

        The class registries are initialized with empty ordered dictionaries.
        :param some_embed: defines a property of a graph as an embedding.
        :param empties:
            registry of instances of Empty;
            if not specified, it is initialized as a ``collections.OrderedDict``.

        """
        self.some_embed = some_embed

        if empties is not None:
            self.empties = empties
        else:
            self.empties = collections.OrderedDict()


# File automatically generated by mapry. DO NOT EDIT OR APPEND!
