package somegraph

// File automatically generated by mapry. DO NOT EDIT OR APPEND!

import "fmt"

// SomeClassToJSONable converts the instance to
// a JSONable representation.
//
// SomeClassToJSONable requires:
//  * instance != nil
//
// SomeClassToJSONable ensures:
//  * target != nil
func SomeClassToJSONable(
	instance *SomeClass) (
	target map[string]interface{}) {

	if instance == nil {
		panic("unexpected nil instance")
	}

	target = make(map[string]interface{})

	////
	// Serialize ReferenceOther
	////

	target["reference_other"] = instance.ReferenceOther.ID

	////
	// Serialize ArrayOfOthers
	////

	count0 := len(instance.ArrayOfOthers)
	slice0 := instance.ArrayOfOthers
	target0 := make([]interface{}, count0)
	for i0 := 0; i0 < count0; i0++ {
		target0[i0] = slice0[i0].ID
	}
	target["array_of_others"] = target0

	////
	// Serialize MapOfOthers
	////

	target1 := make(map[string]interface{})
	map1 := instance.MapOfOthers
	for k1, v1 := range map1 {
		target1[k1] = v1.ID
	}
	target["map_of_others"] = target1

	return
}

// OtherClassToJSONable converts the instance to
// a JSONable representation.
//
// OtherClassToJSONable requires:
//  * instance != nil
//
// OtherClassToJSONable ensures:
//  * target != nil
func OtherClassToJSONable(
	instance *OtherClass) (
	target map[string]interface{}) {

	if instance == nil {
		panic("unexpected nil instance")
	}

	target = make(map[string]interface{})

	////
	// Serialize ReferenceSome
	////

	target["reference_some"] = instance.ReferenceSome.ID

	////
	// Serialize ArrayOfSomes
	////

	count0 := len(instance.ArrayOfSomes)
	slice0 := instance.ArrayOfSomes
	target0 := make([]interface{}, count0)
	for i0 := 0; i0 < count0; i0++ {
		target0[i0] = slice0[i0].ID
	}
	target["array_of_somes"] = target0

	////
	// Serialize MapOfSomes
	////

	target1 := make(map[string]interface{})
	map1 := instance.MapOfSomes
	for k1, v1 := range map1 {
		target1[k1] = v1.ID
	}
	target["map_of_somes"] = target1

	return
}

// SomeGraph converts the instance to a JSONable representation.
//
// SomeGraph requires:
//  * instance != nil
//
// SomeGraph ensures:
//  * (err == nil && target != nil) || (err != nil && target == nil)
func SomeGraphToJSONable(
	instance *SomeGraph) (
	target map[string]interface{}, err error) {

	if instance == nil {
		panic("unexpected nil instance")
	}

	target = make(map[string]interface{})
	defer func() {
		if err != nil {
			target = nil
		}
	}()
	////
	// Serialize instance registry of SomeClass
	////

	if len(instance.SomeClasses) > 0 {
		targetSomeClasses := make(map[string]interface{})
		for id := range instance.SomeClasses {
			someClassInstance := instance.SomeClasses[id]

			if id != someClassInstance.ID {
				err = fmt.Errorf(
					"expected the instance of SomeClass to have the ID %s according to the registry, but got: %s",
					id, someClassInstance.ID)
				return
			}

			targetSomeClasses[id] = SomeClassToJSONable(
				someClassInstance)
		}

		target["some_classes"] = targetSomeClasses
	}

	////
	// Serialize instance registry of OtherClass
	////

	if len(instance.OtherClasses) > 0 {
		targetOtherClasses := make(map[string]interface{})
		for id := range instance.OtherClasses {
			otherClassInstance := instance.OtherClasses[id]

			if id != otherClassInstance.ID {
				err = fmt.Errorf(
					"expected the instance of OtherClass to have the ID %s according to the registry, but got: %s",
					id, otherClassInstance.ID)
				return
			}

			targetOtherClasses[id] = OtherClassToJSONable(
				otherClassInstance)
		}

		target["other_classes"] = targetOtherClasses
	}

	return
}

// File automatically generated by mapry. DO NOT EDIT OR APPEND!
