# File automatically generated by mapry. DO NOT EDIT OR APPEND!


"""defines some object graph."""


import collections
import typing


class WithOptional:
    """defines a class with an optional property."""

    def __init__(
            self,
            id: str,
            some_text: typing.Optional[str] = None) -> None:
        """
        initializes an instance of WithOptional with the given values.

        :param id: identifier of the instance:param some_text: defines an optional property.

        """
        self.id = id
        self.some_text = some_text if some_text is not None else None


class SomeGraph:
    """defines some object graph."""

    def __init__(
            self,
            with_optionals: typing.Optional[typing.MutableMapping[str, WithOptional]] = None) -> None:
        """
        initializes an instance of SomeGraph with the given values.

        The class registries are initialized with empty ordered dictionaries.
        :param with_optionals:
            registry of instances of WithOptional;
            if not specified, it is initialized as a ``collections.OrderedDict``.

        """
        if with_optionals is not None:
            self.with_optionals = with_optionals
        else:
            self.with_optionals = collections.OrderedDict()


# File automatically generated by mapry. DO NOT EDIT OR APPEND!
