# File automatically generated by mapry. DO NOT EDIT OR APPEND!


"""parses JSONable objects."""


import typing

import some.graph
import some.graph.parse


def some_graph_from(
        value: typing.Any,
        ref: str,
        errors: some.graph.parse.Errors
) -> typing.Optional[some.graph.SomeGraph]:
    """
    parses SomeGraph from a JSONable value.

    :param value: JSONable value
    :param ref: reference to the value (e.g., a reference path)
    :param errors: errors encountered during parsing
    :return: parsed SomeGraph, or None if ``errors``
    """
    if errors.full():
        return None

    if not isinstance(value, dict):
        errors.add(
            ref,
            "Expected a dictionary, but got: {}".format(type(value)))
        return None

    graph = some.graph.parse.placeholder_some_graph()

    ##
    # Parse some_time_zone
    ##

    value_0 = value.get(
        'some_time_zone',
        None)

    if value_0 is None:
        errors.add(
            ref,
            'Property is missing: some_time_zone')
    else:
        if not isinstance(value_0, str):
            errors.add(
                '/'.join((
                    ref, 'some_time_zone')),
                "Expected a string, but got: {}".format(
                    type(value_0)))
        else:
            graph.some_time_zone = value_0

    if errors.full():
        return None

    if not errors.empty():
        return None

    return graph
